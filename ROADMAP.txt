Based on the project brief in your PDF ("Optimisation hivernale"), here is a **structured roadmap** to fulfill the project requirements, broken into phases with deliverables and suggested tools.

---

## ðŸ§­ Project Roadmap: Snow Removal Optimization for Montreal

### ðŸŽ¯ **Overall Objective**

Minimize the cost and optimize efficiency of snow removal (dÃ©blaiement) operations in Montreal by:

* Planning drone reconnaissance routes
* Generating snow removal paths for selected boroughs
* Comparing costs for different vehicle types and fleet sizes

---

## Phase 1: ðŸ“š Understanding & Setup

### Goals

* Define scope, assumptions, and project architecture.
* Prepare the output structure required (AUTHORS, README, etc.).

### Tasks

* Analyze PDF requirements and extract all constraints and data.
* Identify borough maps and road networks (OpenStreetMap recommended).
* Set up Git repo and folder structure per constraints:

  * `/drone_study/`
  * `/plowing_plans/Outremont`, etc.
* Write initial `AUTHORS` and `README`.

---

## Phase 2: ðŸ›° Drone Reconnaissance Optimization

### Goals

* Determine the minimal path that allows full coverage of Montrealâ€™s road network by drone.

### Tasks

* Model the cityâ€™s road network as a graph.
* Implement a **Chinese Postman Problem (CPP)** or **TSP** variant to find minimal coverage paths.
* Calculate distance and associated cost:

  * Fixed: 100â‚¬/day
  * 0.01â‚¬/km

### Deliverables

* A drone path simulator or script.
* Cost computation for full coverage.
* Visual output/map of route.
* Documentation in `/drone_study/`.

---

## Phase 3: ðŸš› Vehicle Route Optimization per Borough

### Goals

* For each borough, determine minimal-cost paths for snow removal vehicles.

### Boroughs

* Outremont
* Verdun
* Anjou
* RiviÃ¨re-des-Prairiesâ€“Pointe-aux-Trembles
* Plateau-Mont-Royal

### Tasks

* Use drone output to define roads needing plowing.
* Model constraints:

  * Road direction
  * Each road plowed once
  * Speed: Type I (10 km/h), Type II (20 km/h)
* Use **Route Optimization algorithms**:

  * Dijkstra, A\*, or VRP for single/multiple vehicle routing.
* Estimate costs:

  * Fixed + per km + hourly
  * Consider working hours (extra cost beyond 8h)

### Deliverables

* Route maps and cost breakdowns per borough
* Python/Julia scripts in `/plowing_plans/*`
* Comparison charts of type I vs type II vehicles

---

## Phase 4: ðŸ’° Cost Modeling & Simulation

### Goals

* Propose scenarios with different numbers and types of vehicles.
* Compare total costs of operations across scenarios.

### Tasks

* Model cost formulas based on:

  * Number of vehicles (I & II)
  * Routes' lengths and durations
  * Working hours (base vs overtime)
* Run simulations for:

  * All Type I
  * All Type II
  * Mixed fleets
  * Varying fleet sizes
* Use graphs to compare outcomes.

### Deliverables

* Simulation notebook or script
* Summary of findings in PDF report

---

## Phase 5: ðŸ“„ Report & Packaging

### Goals

* Deliver final archive with all required files and report.

### Tasks

* Write a 4-page PDF report with:

  * Data overview, constraints, assumptions
  * Modelling choices
  * Results, indicators, and scenario comparison
  * Model limitations
* Ensure `README` has:

  * How to run scripts
  * Folder structure
* Package:

  ```
  archive.zip
  â”œâ”€â”€ AUTHORS
  â”œâ”€â”€ README
  â”œâ”€â”€ report.pdf
  â”œâ”€â”€ drone_study/
  â”œâ”€â”€ plowing_plans/
  â””â”€â”€ simulation/
  ```

---

## ðŸ§° Recommended Tools & Tech Stack

* **Programming:** Python (NetworkX, OR-Tools, matplotlib), Julia (for optimization)
* **Mapping:** OpenStreetMap + osmnx
* **Simulation/Graphs:** matplotlib / seaborn / pandas
* **Report:** LaTeX or markdown to PDF

---

Would you like a sample Gantt-style timeline or help implementing any specific phase (e.g., drone path optimization or cost model)?

